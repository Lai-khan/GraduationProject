doctype html
html
  head
    meta(charset='UTF-8')
    title #{guitarPro[0].title}
    // jQuery Plugin
    script(src='https://code.jquery.com/jquery-2.2.4.min.js')
    script(type='text/javascript', src='/javascripts/jquery.alphaTab.js')
    // Including alphaTab
    script(type='text/javascript', src='/javascripts/AlphaTab.js')
    script(type='text/javascript', src='/javascripts/swfobject.js')
    // Including alphaSynth
    // <script type="text/javascript" src="/javascripts/AlphaSynth.js"></script>
    // Style and Scripts
    link(rel='stylesheet', href='/stylesheets/mermaid.css')
    link(rel='stylesheet', href='/stylesheets/font-awesome.min.css')
    link(rel='stylesheet', href='/stylesheets/bootstrap.css')
    link(rel='stylesheet', href='/stylesheets/bootstrap-slider.min.css')
    link(rel='stylesheet', href='/stylesheets/AdminLTE.css')
    link(rel='stylesheet', href='/stylesheets/theme.css')
    link(rel='stylesheet', href='/stylesheets/override.css')
    link(href='//fonts.googleapis.com/css?family=Roboto+Mono:400,700|Roboto:400,400i,700,700i', rel='stylesheet')
    link(rel='stylesheet', href='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/9.7.2/css/bootstrap-slider.min.css', integrity='sha256-6b+gYy3DG/roKdQiHqp1FJYFQkaZdM6ohUpGyFyUAGk=', crossorigin='anonymous')
    script(src='https://cdnjs.cloudflare.com/ajax/libs/bootstrap-slider/9.7.2/bootstrap-slider.min.js', integrity='sha256-dd5QxcG/E8fb/H/iIQann2y2EDS0nEMVI56yYWFeeW4=', crossorigin='anonymous')
    script(src='/javascripts/bootstrap.min.js')
    style.
      @font-face {
      font-family: 'alphaTab';
      src: url('https://rawgit.com/steinbergmedia/bravura/master/redist/eot/Bravura.eot?') format('eot'), url('https://rawgit.com/steinbergmedia/bravura/master/redist/woff/Bravura.woff') format('woff'), url('https://rawgit.com/steinbergmedia/bravura/master/redist/otf/Bravura.otf') format('opentype'), url('http://demo.alphatab.net/lib/alphaTab/Font/bravura.svg#Bravura') format('svg');
      font-weight: normal;
      font-style: normal;
      }
      .at {
      font-family: 'alphaTab';
      speak: none;
      font-style: normal;
      font-weight: normal;
      font-variant: normal;
      text-transform: none;
      line-height: 1;
      line-height: 1;
      -webkit-font-smoothing: antialiased;
      -moz-osx-font-smoothing: grayscale;
      font-size: 34px;
      overflow: visible !important;
      }
      .barCursor { /* Defines the color of the bar background when a bar is played */
      background: rgba(255, 242, 0, 0.25);
      }
      .selectionWrapper div { /* Defines the color of the selection background */
      background: rgba(64, 64, 255, 0.1)
      }
      .beatCursor { /* Defines the beat cursor */
      background: rgba(64, 64, 255, 0.75)
      }
      .atHighlight * { /* Defines the color of the music symbols when they are being played (svg) */
      fill: #0078ff;
      stroke: #0078ff;
      }
      #alphaTab {
      width: 95%;
      display: block;
      margin: auto;
      margin-top: 30px;
      }
  body
    // Toolbar containing the buttons
    nav.navbar.navbar-default.navbar-fixed-bottom
      .container
        #navbar.navbar-collapse.collapse
          // Player controls
          ul.nav.navbar-nav
            li
              button#playPause.btn.btn-link.navbar-btn.fa.fa-play(disabled='disabled')
            li
              button#stop.btn.btn-link.navbar-btn.fa.fa-stop(disabled='disabled')
            li.dropdown
              a.dropdown-toggle(href='#', data-toggle='dropdown', role='button', aria-haspopup='true', aria-expanded='false')
                | Speed: 
                span#playbackSpeed 100%
                span.caret
              ul#playbackSpeedSelector.dropdown-menu
                li
                  a(href='#', data-value='0.25') 25%
                li
                  a(href='#', data-value='0.5') 50%
                li
                  a(href='#', data-value='0.6') 60%
                li
                  a(href='#', data-value='0.7') 70%
                li
                  a(href='#', data-value='0.8') 80%
                li
                  a(href='#', data-value='0.9') 90%
                li
                  a(href='#', data-value='1') 100%
                li
                  a(href='#', data-value='1.1') 110%
                li
                  a(href='#', data-value='1.25') 125%
                li
                  a(href='#', data-value='1.5') 150%
                li
                  a(href='#', data-value='2') 200%
            li
              a#looping.fa.fa-refresh(href='#')
            li
              a#metronome.fa.fa-edit(href='#', data-toggle='tooltip', data-placement='bottom', title='Metronome')
          ul.nav.navbar-nav.navbar-right
            // Loading indicator for soundfont
            li#soundFontProgressMenuItem
              p.navbar-text SoundFont
              .progress
                #soundFontProgress.progress-bar(role='progressbar', aria-valuenow='60', aria-valuemin='0', aria-valuemax='100', style='width: 0%;')
                  | 0%
            li
              a(href="/") Home
    //
      data-player enables the player
      data-player-offset specifies the additional offset to apply when scrolling.
      in this sample we scroll 70px up for vertical layouts because the menubar would overlap the tablature otherwise.
      the 10px are to have a small horizontal padding.
    #alphaTab(data-file='/files/'+guitarPro[0].filename, data-tracks='0', data-player='/files/default.sf2')
    script.
      var at = $('#alphaTab');
      // 1. setup events
      at.on('alphaTab.soundFontLoad', function(e, progress) {
      var percentage = ((progress.loaded / progress.total) * 100)|0;
      $('#soundFrontProgress').css('width', percentage + '%').text(percentage + '%');
      });
      at.on('alphaTab.soundFontLoaded', function() {
      $('#soundFontProgressMenuItem').hide();
      });
      at.on('alphaTab.playerReady', function() {
      $('#loadingInfo').hide();
      $('#playPause').prop('disabled', false).removeAttr('disabled');
      $('#stop').prop('disabled', false).removeAttr('disabled');
      $('#looping').prop('disabled', false).removeAttr('disabled');
      $('#metronome').prop('disabled', false).removeAttr('disabled');
      updateControls();
      });
      at.on('alphaTab.playerStateChanged', function() {
      updateControls();
      });
      // 2. Load alphaTab
      at.alphaTab();
      // 3. Setup UI controls and use API to control the playback
      $('#playPause').click(function() {
      at.alphaTab('playPause');
      });
      $('#stop').click(function() {
      at.alphaTab('stop');
      });
      $('#looping').click(function(e) {
      e.preventDefault();
      var looping = !at.alphaTab('loop');
      at.alphaTab('loop', looping);
      if(looping) {
      $('#looping').closest('li').addClass('active');
      }
      else {
      $('#looping').closest('li').removeClass('active');
      }
      });
      $('#metronome').click(function(e) {
      e.preventDefault();
      var metronomeVolume = at.alphaTab('metronomeVolume');
      if(metronomeVolume == 0) {
      at.alphaTab('metronomeVolume', 1);
      $('#metronome').closest('li').addClass('active');
      }
      else {
      at.alphaTab('metronomeVolume', 0);
      $('#metronome').closest('li').removeClass('active');
      }
      });
      $('#playbackSpeedSelector a').click(function() {
      var playbackSpeed = $(this).data('value');
      at.alphaTab('playbackSpeed', playbackSpeed);
      $('#playbackSpeed').text($(this).text());
      });
      function updateControls() {
      var playerState = at.alphaTab('playerState');
      switch(playerState) {
      case 0: // stopped/paused
      $('#playPause').removeClass('fa-pause').addClass('fa-play');
      break;
      case 1: // playing
      $('#playPause').removeClass('fa-play').addClass('fa-pause');
      break;
      }
      var metronomeVolume = at.alphaTab('metronomeVolume');
      if(metronomeVolume == 0) {
      at.alphaTab('metronomeVolume', 1);
      $('#metronome').closest('li').addClass('active');
      }
      else {
      at.alphaTab('metronomeVolume', 0);
      $('#metronome').closest('li').removeClass('active');
      }
      }
